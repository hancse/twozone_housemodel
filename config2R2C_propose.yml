# 1st:  user need to install notepad++ (free software) for interacting with the file.  
# 2nd:  open the link by right click and select open file.
# 3rd:  Only change the parameters that you know otherwise keep the dedfault value.
# 4rd:  Read the report for more explaination on the equations.
# 5rd:  python function files:

#   *   file://../new_configurator.py   : Calculate R-C values for 2R2C network model.
#   *   file://../house.py              : Differential equation model which Compute air and wall tempearature inside the house.
#   *   file://../internal_heat_gain.py : Funtion for making internal heat gain profile.
#   *   file://../Temperature_SP.py     : Funtion for making Temperature setpoint profile (thermalstat setting).
#   *   file://../Simulation2R2C.py     : Funtion for making a Simulation.


dirs:
    cfg_dir : ".."

model:

timing:
    days_sim : 5
    interval : NEN5060
    unit : ss        
#_______________________Dwelling temperatures calculation________________________

#   Tairdt  = ((T_outdoor - Tair) / Rair_outdoor + (Twall - Tair) / Rair_wall 
#             + Qdot_inst + Qdot_internal + CF * Qdot_solar) / Cair
#
#   Twalldt = ((Tair - Twall) / Rair_wall + (1 - CF) * Qdot_solar) / Cwall
#
#   *   Tair:   indoor air temperature [C]
#
#   *   Twall:  wall temperature [C]



#Calculation of the resistances.

resistance:

#__________Resistance indoor air-wall____________
#
#Resistance indoor air-wall:            Rair_wall = 1.0 / (A_internal_mass * alpha_internal_mass) 
    
    #Floor and internal walls surface [m2]
    A_internal_mass: 170 # 106 + 64:
    
    # Heattransfer coefficient [W/m2K].
    # Internal wall thermal resistance
    alpha_internal_mass : 8


#_________Resistance indoor air-outdoor air__________
#
#Resistance indoor air-outdoor air:     Rair_outdoor = 1.0 / (A_facade * U + A_glass * U_glass + qm * c_air)
#      
#   *   Sum of all glass surfaces:      A_glass  = g_value.sum(glass)
#          
#   *   U-value indoor air-facade:      U = 1.0 / (1.0 / alpha_i_facade + Rc_facade + 1 / alpha_e_facade)  
#      
#   *   Ventilation, mass air flow:     qm = qV * rho_air
#           
#   *   Ventilation, volume air flow:   qV = (n * V_dwelling) / 3600    
    
    #Envelope surface (facade + roof + ground) [m2] (A_facade)
    A_facade : 160.2

    #Thermal resistance per unit area (thermal insulation), 
    #R-value [m2K/W] (Rc_facade)
    Rc_facade : 1.3
    
    # Heat transfer coefficient [W/m2K]. 
    # Exterior surface thermal resistance Rse = 1/ alpha_e_facade    
    alpha_e_facade : 23
    
    # Heat transfer coefficient [W/m2K]. 
    # Interior surface thermal resistance Ri= 1/ alpha_i_facade
    alpha_i_facade : 8
    
    # Sum of all glass surfaces:    A_glass  = g_value.sum(glass)
    # glass window size and direction [m2] example E means East
    E  : 9.5
    SE : 0
    S  : 0
    SW : 0
    W  : 9.5
    NW : 0
    N  : 0
    NE : 0
    # glass transmittance
    g_value : 0.7
    
    #Window thermal transmittance, U-value [W/m2K]
    U_glass : 2.9
    
    #Ventilation, air changes per hour [#/h]
    n : 0.55
    
    #Internal volume [m3]
    V_dwelling : 275.6
    
    #density air in [kg/m3]
    rho_air : 1.20       
    
    #specific heat capacity air [J/kgK]
    c_air  : 1005
#
#Calculation of the thermal capacitances (heat capacities).

#Heat capacity indoor air + walls:	Cair = rho_internal_mass * c_internal_mass * V_internal_mass / 2.0 + rho_air * c_air * V_dwelling    

#Heat capacity walls(opt1): 		Cwall = rho_internal_mass * c_internal_mass * V_internal_mass / 2.0 
#Heat capacity walls(opt2):   		Cwall = rho_facade * c_facade * V_facade / 2.0
#	
#		Volume facade walls construction [m3]:  V_facade = A_facade*th_facade  
#												th_facade: Construction thickness [m]

capacity:
#__________Heat capacity indoor air + walls____________

#Heat capacity walls (Envelop model has both walls where 
#both surfaces are used for energy storage -> the construction thickness/2)
#
#Heat capacity indoor air + walls:              Cair = rho_internal_mass * c_internal_mass * V_internal_mass / 2.0 + rho_air * c_air * V_dwelling 
#    
#___________Heat capacity walls________________________

#Heat capacity walls (Envelop model has both walls where both 
#surfaces are used for energy storage -> the construction thickness/2)

#Heat capacity walls(opt1): 		            Cwall = rho_internal_mass * c_internal_mass * V_internal_mass / 2.0 
#
#Heat capacity walls(opt2):   		            Cwall = rho_facade * c_facade * V_facade / 2.0
#	
#   *   Volume facade walls construction [m3]:  V_facade = A_facade*th_facade  
#
#	*   Construction thickness [m]:				th_facade 
    
    #Facade and internal mass (floor, internal walls) construction
    # Light_weight : 0 / Middle_weight : 1  / Heavy_weight : 2
    N_internal_mass : 1
    
    #Density construction in [kg/m3]
    rho_internal_mass: [500, 1000, 2500]
    
    #Specific heat capacity construction [J/kgK]
    c_internal_mass: [840, 840, 840]
    
    #Floor and internal walls surface [m2]
    A_internal_mass: 170 # 106 + 64
    
    #Construction thickness [m]
    th_internal_mass: [0.1, 0.1, 0.2]
    
    #Volume floor and internal walls construction [m3]
    V_internal_mass : (A_internal_mass * th_internal_mass)
    
    # density air in [kg/m3]
    rho_air : 1.20
    
    # specific heat capacity air [J/kgK]
    c_air  : 1005
    
    #Internal volume [m3]
    V_dwelling : 275.6

    #Facade and internal mass (floor, internal walls) construction
    # Light_weight : 0 / Middle_weight : 1  / Heavy_weight : 2
    N_facade  : 1
    
    #Construction thickness [m]
    th_facade: [ 0.1,  0.1, 0.2 ]
    
    #Specific heat capacity construction [J/kgK]
    c_facade: [840, 840, 840]
    
    #Density construction in [kg/m3]
    rho_facade: [500, 1000, 2500]
    
    #Envelope surface (facade + roof + ground) [m2] (A_facade)
    A_facade : 160.2
    
    #Volume facade walls construction [m3]
    V_facade : (A_facade * th_facade)
#
# Keep the default value unless you know what you are doing.
#
# Internal heat : Qdot

internal:
    # Presence from [hour]
    t1 : 8  # [time]
    
    # Presence until [hour]
    t2 : 23 # [time]
    
    # _________Work days____________:
    
    # Define wake up time in the morning 7:00, internal heat 400 [W]
    Wu_time : 7 # [time]
    
    # Go to work time/ leave the house
    # Define time that people go to work 8:00, thermostat set to 17
    Work_time : 8   # [time]
    
    #Define time that people back from work 18:00, internal heat 400 [W]
    back_home_from_work : 18 # [time]
    
    #Do not change this value except 
    #user want to add additional profile on working day. [W]
    Flex_heat_SP_workday  : 150     # [W]
    
    # _______Holidays (day-off)_________:
    
    # Define wake up time in the morning 10:00, internal heat 400 [W]
    Wu_time_dayoff : 10 # [time]
    
    # Define time that people go out for shopping 
    # in the day-off, 13:00
    shopping_time : 13  # [time]
    
    # Define heat gain setpoint when go out, 
    # change to 400 if not going out for shopping. 
    Flex_T_SP_dayoff   : 150 # [W]
    
    # Define time that people back home after shopping 15:00,
    # internal heat 400 [W]
    back_home : 15  # [time] 
    
    # Internal heat difference between day and night [W]
    delta_Q : 150   # [W]
    # Daytime internal heat generation [W]
    Q_day : 400     # [W]
#
# Keep the default value unless you know what you are doing.
#
# Qdot_inst = (Thermostat_SP - Tair) * Controller
#
# Thermostat profile setting 
#
thermalstat_setpoint:
    # Presence from [hour] 8:00
    t1 : 8  # [time]
    
    # Presence until [hour] 23:00
    t2 : 23 # [time]
    
    # _________Work days____________:
    
    # Define wake up time in the morning 7:00 [hour], temperature set to 20
    Wu_time : 7     # [time]
    
    # Go to work time/ leave the house
    # Define time that people go to work 8:00, thermostat set to 17
    Work_time : 8   # [time]
    
    #Define time that people back from work 18:00, temperature set to 20
    back_home_from_work : 18 # [time]
    
    #Do not change this value except 
    #user want to add additional SP profile on working day.
    Flex_T_SP_workday  : 17 # degree [C]
    
    # _______Holidays (day-off)_________:
    
    # Define wake up time in the morning 10:00, temperature set to 20
    Wu_time_dayoff : 10 # [time]
    
    # Define time that people go out for shopping 
    # in the day-off, thermostat set to 18
    shopping_time : 13  # [time]
    
    # Define thermostat setpoint when go out, 
    #change to 20 if dont want to change the temperature. 
    Flex_T_SP_dayoff   : 18 # degree [C]
    
    #Define time that people back home after shopping 15:00,
    #temperature set to 20
    back_home : 15      # [time]
 
    # Set temperature of thermostat at night from time t2
    Night_T_SP : 17 # degree [C]
    
    # Set day temperature of thermostat
    Day_T_SP   : 20 # degree [C]
 

controller:
    # propotional gain
    kp : 7000
    # intergal
    ki : 0
    # derivative
    kd : 0
   

   

radiator:
    # U-value of the radiator
    Urad : 30
    # Area of the radiator
    Arad : 10
    # Cp value fo water
    cpwater : 4180
    #Volume of the radiator
    volume_rad : 50
    #Capacity of the radiator
    Crad : (volume_rad * cpwater)
    #density of the water
    rhowater : 1000
    #Capacity of the buffervessel
    Cmid : (cpwater*volumeMid*rhowater)
